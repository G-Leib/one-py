{"name":"OnePy","tagline":"COM Object Model for OneNote 2013 in Python","body":"OnePy\r\n=====\r\n\r\nCOM Object Model for OneNote 2013 in Python\r\n\r\n\r\n\r\n\r\n#### What are the requirements for onepy?\r\n\r\n* Windows 7 with Python 3.x\r\n* OneNote 2013 or 2010 with your notebooks open\r\n\r\n\r\n### How do I setup my environment?\r\n\r\n* Install Python 3.4 x86 from [here](https://www.python.org/download/releases/3.4.0/) \r\n* Install PyWin32 for Python 3.4 x86 from [here](http://sourceforge.net/projects/pywin32/files/pywin32/) \r\n* Add `C:\\Python34\\` to your PATH variable\r\n* Run `C:\\Python34\\Lib\\site-packages\\win32com\\client\\makepy.py`\r\n* Select `Microsoft OneNote 15.0 Extended Type Library`\r\n\r\n\r\n### How do I build onepy?\r\n\r\n* From the repo, run `python.exe setup.py register sdist bdist_wininst upload`\r\n\r\n\r\n### How do I install onepy?\r\n\r\n`pip install onepy`\r\n\r\n\r\n### How do I use onepy?\r\n\r\nCreate a new file called `nb_printer.py` and type the following into it: \r\n\r\n    import onepy\r\n  \r\n    on = onepy.OneNote()\r\n  \r\n    # print a list of notebooks open in the OneNote 2013 client\r\n    for notebook in on.hierarchy\r\n      print (notebook)\r\n\r\nSave the file, and run `nb_printer.py` from the cmd prompt\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}